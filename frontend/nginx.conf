server {
  listen 80;
  server_tokens off;

  # Add this line to increase the maximum allowed body size
  # Adjust the value (e.g., 50M, 100M, 200M) based on your needs
  client_max_body_size 100M; # Example: Allow up to 100MB uploads

  location / {
    root /usr/share/nginx/html;
    index index.html index.htm;
    try_files $uri $uri/ /index.html;
  }

  # Proxy requests for the backend API
  location /api/ {
    # Use host.docker.internal to reach the backend running on the host network
    # Note: Using service names like 'backend' in docker-compose is generally preferred
    # if both frontend and backend are in the same docker-compose network.
    # Assuming backend service is named 'backend' and listens on 8501:
    proxy_pass http://backend:8501/; # <-- Consider changing host.docker.internal to service name if applicable
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  # Proxy requests for static images served by the backend
  # CHANGE: Consider serving images directly from Nginx for better performance
  location /images/ {
    # Use host.docker.internal to reach the backend running on the host network
    # proxy_pass http://host.docker.internal:${BACKEND_PORT}/images/; # <-- REMOVE or COMMENT OUT this line

    # Instead, serve directly from the volume mount point
    # This path /app/storage/images must match the volume mount point
    # for the images directory in your backend container's Dockerfile/docker-compose.yml
    alias /app/storage/images/; # <-- ADD this line
    # Optional: Add caching headers
    expires 30d;
    add_header Cache-Control "public, no-transform";
  }
}
