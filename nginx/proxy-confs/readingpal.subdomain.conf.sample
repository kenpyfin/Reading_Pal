## Version 2023.10.28
# Ensure this file is placed in your SWAG nginx/proxy-confs/ directory.
# Rename to readingpal.yourdomain.conf (or similar) and edit server_name.

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name readingpal.*; # TODO: Replace readingpal.* with your actual subdomain(s) e.g., readingpal.example.com

    include /config/nginx/ssl.conf;

    # Allow large file uploads (e.g., PDFs to the backend via /api/upload)
    # Set to 0 for unlimited, or a specific value like 100M for 100 megabytes.
    client_max_body_size 0;

    # (Optional) Resolver for Docker internal DNS.
    # Useful if $upstream_app variables are set to Docker service names instead of localhost.
    # resolver 127.0.0.11 valid=30s;

    # Define upstream for the backend API service
    set $backend_app localhost; # Assumes backend runs on the same host as SWAG (host network mode)
    set $backend_port 8501;    # Port from .env BACKEND_PORT

    # Define upstream for the frontend service
    # This service (e.g., Nginx in frontend container or Node server) serves React static files,
    # handles /images/, and other frontend routes.
    set $frontend_app localhost; # Assumes frontend runs on the same host as SWAG (host network mode)
    set $frontend_port 3100;    # Port from .env FRONTEND_PORT

    # Proxy API requests to the backend
    location /api { # Matches any request starting with /api
        include /config/nginx/proxy.conf; # Common SWAG proxy settings (headers, etc.)
        
        # The backend service expects the full path including /api, 
        # e.g., /api/books, /api/auth/callback
        proxy_pass http://$backend_app:$backend_port; 
    }

    # Proxy all other requests to the frontend service
    location / {
        include /config/nginx/proxy.conf; # Common SWAG proxy settings
        proxy_pass http://$frontend_app:$frontend_port;

        # WebSocket support (useful for React Hot Module Replacement during development,
        # and potentially for future real-time features)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}
